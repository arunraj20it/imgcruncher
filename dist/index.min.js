export function getImgBase64Size(e,t="KB"){let r=e.split(",")[1]||e;const o=(r.match(/=+$/)||[""])[0].length,n=3*r.length/4-o;switch(t.toLowerCase()){case"bytes":return Math.round(n);case"kb":return Math.round(n/1024);default:return+(n/1048576).toFixed(2)}}export async function imgcruncher(e,t=.6,r=1920,o=1080){return 3*e.length/4194304>20?(console.warn("Image too large to compress."),e):new Promise(n=>{const a=new Image;a.onload=()=>{let s=a.width,c=a.height;const g=document.createElement("canvas"),i=g.getContext("2d");if(!i)return n(e);const h=s/c;(s>r||c>o)&&(s>c?(s=r,c=Math.round(r/h)):(c=o,s=Math.round(o*h))),g.width=s,g.height=c,i.drawImage(a,0,0,s,c);try{const r=e.startsWith("data:image/png")?"image/png":"image/jpeg",o=g.toDataURL(r,t);n(o)}catch(t){console.error("Compression failed:",t),n(e)}},a.onerror=t=>{console.error("Image load error:",t),n(e)},a.src=e})}